{"version":3,"sources":["components/logo.jpg","components/TabCard.js","screens/MainPage.js","screens/AddUserScreen.js","screens/AddCarScreen.js","screens/AdminScreen.js","screens/ProfileScreen.js","components/Header.js","screens/CarDetailsScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TabCard","className","onClick","this","props","onPress","alt","src","imageCover","title","React","Component","MainPage","changePage","AddUserScreen","onUsernameChange","event","setState","username","target","value","onEmailChange","email","onPasswordChange","password","state","onInput","type","registerUser","AddCarScreen","modeliInput","modeli","vitiInput","viti","kilometrazhiInput","kilometrazhi","qytetiInput","qyteti","karburantiInput","karburanti","strukturaInput","struktura","targaInput","targa","transmetuesiInput","transmetuesi","kolaudimiInput","kolaudimi","siguracioniInput","siguracioni","noUser","alert","user","logedUser","required","onChange","name","registerCar","AdminScreen","changePassword","changeUsername","logAdmin","adminloged","usersViewOpen","carsViewOpen","loged","registeredUsers","users","registeredCars","cars","map","car","index","carPage","ProfileScreen","changeEmail","filter","checkUser","i","Header","Logo","logOut","CarDetailsScreen","App","statePageChange","page","concat","userloged","logUser","isLoged","pageHandler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.defdf8a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6d71fdf0.jpg\";","import React from 'react';\r\nimport './components.css';\r\n\r\nclass TabCard extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"card\" onClick={this.props.onPress}>\r\n                <img className=\"img\" alt=\"im\" src={this.props.imageCover}/>\r\n                <p className=\"title\">{this.props.title}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TabCard;","import React from 'react';\r\nimport TabCard from '../components/TabCard';\r\nimport './screens.css';\r\n\r\nclass MainPage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"screen\">\r\n                <div className=\"tab-container\">\r\n                    <TabCard \r\n                        imageCover=\"https://simpleicon.com/wp-content/uploads/user1.png\" \r\n                        title=\"Add User\" \r\n                        onPress={()=>this.props.changePage('addUser')} \r\n                    />\r\n                    <TabCard \r\n                        imageCover=\"https://cdn1.iconfinder.com/data/icons/ios-11-glyphs/30/car-512.png\" \r\n                        title=\"Add Car\" \r\n                        onPress={()=>this.props.changePage('addCar')}  \r\n                    />\r\n                    <TabCard \r\n                        imageCover=\"https://static.thenounproject.com/png/99161-200.png\" \r\n                        title=\"Admin\" \r\n                        onPress={()=>this.props.changePage('admin')}\r\n                    />\r\n                    <TabCard \r\n                        imageCover=\"https://image.flaticon.com/icons/png/512/16/16363.png\" \r\n                        title=\"User Profile\" \r\n                        onPress={()=>this.props.changePage('profile')} \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport './screens.css';\r\n\r\nclass AddUserScreen extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            email: null,\r\n            password: null\r\n        }\r\n    }\r\n\r\n    onUsernameChange = (event)=>{\r\n        this.setState({username: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event)=>{\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event)=>{\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"sign-container\">\r\n                    <div className=\"details\">\r\n                        <label>Username</label>\r\n                        <input onInput={this.onUsernameChange} type=\"text\"/>\r\n                    </div>\r\n                    <div className=\"details\">\r\n                        <label>Email</label>\r\n                        <input onInput={this.onEmailChange} type=\"text\"/>\r\n                    </div>\r\n                    <div className=\"details\">\r\n                        <label>Password</label>\r\n                        <input onInput={this.onPasswordChange} type=\"password\"/>\r\n                    </div>\r\n                    <button onClick={()=>this.props.registerUser({\r\n                        username: this.state.username,\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                    })}>Add User</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserScreen;","import React from 'react';\r\nimport './screens.css';\r\n\r\nclass AddCarScreen extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: props.logedUser,\r\n            modeli: null,\r\n            viti: null,\r\n            kilometrazhi: null,\r\n            qyteti: null,\r\n            karburanti: 'nafte',\r\n            struktura: null,\r\n            targa: null,\r\n            transmetuesi: 'manual',\r\n            kolaudimi: null,\r\n            siguracioni: null\r\n        }\r\n    }\r\n\r\n    modeliInput = (event)=>{\r\n        this.setState({modeli: event.target.value})\r\n    }\r\n    vitiInput = (event)=>{\r\n        this.setState({viti: event.target.value})\r\n    }\r\n    kilometrazhiInput = (event)=>{\r\n        this.setState({kilometrazhi: event.target.value})\r\n    }\r\n    qytetiInput = (event)=>{\r\n        this.setState({qyteti: event.target.value})\r\n    }\r\n    karburantiInput = (event)=>{\r\n        this.setState({karburanti: event.target.value})\r\n    }\r\n    strukturaInput = (event)=>{\r\n        this.setState({struktura: event.target.value})\r\n    }\r\n    targaInput = (event)=>{\r\n        this.setState({targa: event.target.value})\r\n    }\r\n    transmetuesiInput = (event)=>{\r\n        this.setState({transmetuesi: event.target.value})\r\n    }\r\n    kolaudimiInput = (event)=>{\r\n        this.setState({kolaudimi: event.target.value})\r\n    }\r\n    siguracioniInput = (event)=>{\r\n        this.setState({siguracioni: event.target.value})\r\n    }\r\n\r\n    noUser = ()=>{\r\n        alert('You are not loged in!')\r\n        this.props.changePage('home');\r\n    }\r\n\r\n    render(){\r\n        const user = this.props.logedUser;\r\n        return(\r\n            <div>\r\n                {\r\n                    user===null? \r\n                    this.noUser()\r\n                    :null\r\n                }\r\n                <div className=\"car-container\">\r\n                    <div className=\"car-details\">\r\n                        <label>Modeli</label>\r\n                        <input onInput={this.modeliInput} required=\"required\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Viti</label>\r\n                        <input onInput={this.vitiInput} required=\"required\" type=\"number\"/>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Kilometrazhi</label>\r\n                        <input onInput={this.kilometrazhiInput} required=\"required\" type=\"number\"/>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Qyteti</label>\r\n                        <input onInput={this.qytetiInput} required=\"required\" type=\"text\"/>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Karburanti</label>\r\n                        <select onChange={this.karburantiInput} required=\"required\" name=\"car-fuel\">\r\n                            <option value=\"nafte\">Nafte</option>\r\n                            <option value=\"benzine\">Benzine</option>\r\n                            <option value=\"benzine-gas\">Benzine-Gas</option>\r\n                            <option value=\"elektrike\">Elektrike</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Struktura</label>\r\n                        <input onInput={this.strukturaInput} required=\"required\" type=\"text\"/>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Targa</label>\r\n                        <input onInput={this.targaInput} required=\"required\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Transmetuesi</label>\r\n                        <select onChange={this.transmetuesiInput} required=\"required\" name=\"car-transmiter\">\r\n                            <option value=\"manual\">Manual</option>\r\n                            <option value=\"automatik\">Automatik</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Data e kolaudimit</label>\r\n                        <input onInput={this.kolaudimiInput} required=\"required\" type=\"date\"/>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Data e siguracionit</label>\r\n                        <input onInput={this.siguracioniInput} required=\"required\" type=\"date\"/>\r\n                    </div>\r\n                    <button onClick={()=>this.props.registerCar(this.state)}>Add Car</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddCarScreen;","import React from 'react';\r\nimport './screens.css';\r\n\r\nclass AdminScreen extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usersViewOpen: false,\r\n            carsViewOpen: false,\r\n            username: null,\r\n            password: null,\r\n            adminloged: props.loged\r\n        }\r\n    }\r\n\r\n    changePassword = (event)=>{\r\n        this.setState({password: event.target.value});\r\n    }\r\n    changeUsername = (event)=>{\r\n        this.setState({username: event.target.value});\r\n    }\r\n\r\n    logAdmin = ()=>{\r\n        if(this.state.username === 'admin' && this.state.password === 'admin')\r\n        {\r\n            this.props.logAdmin();\r\n            this.setState({adminloged: 'loged'})\r\n        }\r\n        else alert('wrong credentials')\r\n    }\r\n\r\n    render(){\r\n        const registeredUsers = this.props.users;\r\n        const registeredCars = this.props.cars;\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.adminloged===null?\r\n                    <div className=\"log-admin\">\r\n                        <p>Admin is not loged!</p>\r\n                        <label>Username</label>\r\n                        <input onInput={this.changeUsername} type=\"text\" />\r\n                        <label>Password</label>\r\n                        <input onInput={this.changePassword} type=\"password\" />\r\n                        <button onClick={this.logAdmin}>Log In</button>\r\n                    </div>\r\n                    :<div className=\"view-container\">\r\n                        <div>\r\n                            <p onClick={()=>{\r\n                                if(this.state.carsViewOpen) this.setState({carsViewOpen: false})\r\n                                else this.setState({carsViewOpen: true})\r\n                            }} className=\"view-open\">+ All Cars</p>\r\n\r\n                            {\r\n                                this.state.carsViewOpen?\r\n                                <div className=\"cars-card-container\">\r\n                                    {\r\n                                        registeredCars.map((car, index)=>\r\n                                            <div onClick={()=>this.props.carPage(car)} className=\"cars-card\">\r\n                                                <p>{car.modeli}</p>\r\n                                                <p>{car.viti}</p>\r\n                                                <p>{car.transmetuesi}</p>\r\n                                                <p>{car.karburanti}</p>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                :null\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <p onClick={()=>{\r\n                                if(this.state.usersViewOpen) this.setState({usersViewOpen: false})\r\n                                else this.setState({usersViewOpen: true})\r\n                            }} className=\"view-open\">+ All Users</p>\r\n                            {\r\n                                this.state.usersViewOpen?\r\n                                <div className=\"cars-card-container\">\r\n                                    {\r\n                                        registeredUsers.map((user, index)=>\r\n                                            <div className=\"user-card\">\r\n                                                <p>Username: {user.username}</p>\r\n                                                <p>Email: {user.email}</p>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                :null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminScreen;","import React from 'react';\r\nimport './screens.css';\r\n\r\nclass ProfileScreen extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: null,\r\n            password: null\r\n        }\r\n    }\r\n\r\n\r\n    changePassword = (event)=>{\r\n        this.setState({password: event.target.value});\r\n    }\r\n    changeEmail = (event)=>{\r\n        this.setState({email: event.target.value});\r\n    }\r\n    render(){\r\n        const user = this.props.logedUser;\r\n        const cars = this.props.cars.filter(car=>car.user===user)\r\n        return(\r\n            <div>\r\n                {\r\n                    user === null?\r\n                    <div className=\"log-admin\">\r\n                        <p>User is not loged!</p>\r\n                        <label>Username</label>\r\n                        <input onInput={this.changeEmail} type=\"text\" />\r\n                        <label>Password</label>\r\n                        <input onInput={this.changePassword} type=\"password\" />\r\n                        <button onClick={()=>this.props.checkUser(this.state.email, this.state.password)}>Log In</button>\r\n                    </div>\r\n                    :<div className=\"profile-container\">\r\n                        <p className=\"view-open\">All Cars</p>\r\n                        <div>\r\n                            {\r\n                                cars.map((car,i)=>\r\n                                <div onClick={()=>this.props.carPage(car)} className=\"cars-card\">\r\n                                    <p>{car.modeli}</p>\r\n                                    <p>{car.viti}</p>\r\n                                    <p>{car.transmetuesi}</p>\r\n                                    <p>{car.karburanti}</p>\r\n                                </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileScreen;","import React from 'react';\r\nimport Logo from './logo.jpg';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <img className=\"logo\" src={Logo} onClick={()=>this.props.changePage('home')}/>\r\n                {\r\n                    this.props.logedUser===null?\r\n                    <p onClick={()=>this.props.changePage('profile')} className=\"name\">Log In</p>\r\n                    :<div className=\"log-options\">\r\n                        <p className=\"name\">{this.props.logedUser} /</p>\r\n                        <p className=\"logout\" onClick={this.props.logOut}>Log Out</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './screens.css';\r\n\r\nclass CarDetailsScreen extends React.Component{\r\n    render(){\r\n        const car = this.props.car;\r\n        return(\r\n            <div>\r\n                <div className=\"car-container\">\r\n                    <div className=\"car-details\">\r\n                        <label>Modeli</label>\r\n                        <p>{car.modeli}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Viti</label>\r\n                        <p>{car.viti}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Perdoruesi</label>\r\n                        <p>{car.user}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Kilometrazhi</label>\r\n                        <p>{car.kilometrazhi}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Qyteti</label>\r\n                        <p>{car.qyteti}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Karburanti</label>\r\n                        <p>{car.karburanti}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Struktura</label>\r\n                        <p>{car.struktura}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Targa</label>\r\n                        <p>{car.targa}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Transmetuesi</label>\r\n                        <p>{car.transmetuesi}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Data e kolaudimit</label>\r\n                        <p>{car.kolaudimi}</p>\r\n                    </div>\r\n                    <div className=\"car-details\">\r\n                        <label>Data e siguracionit</label>\r\n                        <p>{car.siguracioni}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CarDetailsScreen;","import React from 'react';\nimport './App.css';\nimport MainPage from './screens/MainPage';\nimport AddUserScren from './screens/AddUserScreen';\nimport AddCarScren from './screens/AddCarScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Header from './components/Header';\nimport CarDetailsScreen from './screens/CarDetailsScreen';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      page: 'home',\n      car: null,\n      cars: [],\n      users: [],\n      userloged: null,\n      adminloged: null\n    }\n  }\n\n  statePageChange = (page) => {\n    this.setState({page: page});\n  }\n\n  registerCar = (car) => {\n    this.setState({cars: this.state.cars.concat(car), page: 'home'});\n  }\n\n  registerUser = (user) => {\n    this.setState({users: this.state.users.concat(user), userloged: user.email, page: 'home'});\n  }\n\n  logUser = (user)=>{\n    this.setState({userloged: user, page: 'home'})\n  }\n\n  logAdmin = ()=>{\n    this.setState({adminloged: 'loged'})\n  }\n\n  logOut = ()=> {\n    this.setState({userloged: null, page: 'home'})\n  }\n\n  carPage = (car)=>{\n    this.setState({car: car, page: 'carpage'})\n  }\n\n  checkUser =(email, password)=>{\n    let isLoged = false\n    this.state.users.map(user=>{\n      if(user.email === email && user.password === password)\n      {\n        isLoged = true;\n        this.logUser(email);\n      }\n        \n    })\n    if(!isLoged)\n      alert('No User found');\n  }\n\n  pageHandler = () =>{\n    switch(this.state.page){\n      case 'home':\n        return <MainPage changePage={this.statePageChange} />;\n      case 'addUser':\n        return <AddUserScren registerUser={this.registerUser} />\n      case 'addCar':\n        return <AddCarScren registerCar={this.registerCar} logedUser={this.state.userloged} changePage={this.statePageChange} />\n      case 'admin':\n        return <AdminScreen carPage={this.carPage} loged={this.state.adminloged} logAdmin={this.logAdmin} cars={this.state.cars} users={this.state.users} />\n      case 'profile':\n        return <ProfileScreen carPage={this.carPage} checkUser={this.checkUser} logedUser={this.state.userloged} cars={this.state.cars}  />\n      case 'carpage':\n        return <CarDetailsScreen car={this.state.car} />\n      default:\n        return <MainPage />;\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header logOut={this.logOut} changePage={this.statePageChange} logedUser={this.state.userloged} />\n        {this.pageHandler()}\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}